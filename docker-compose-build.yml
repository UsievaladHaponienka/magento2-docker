version: "2"
services:
  varnish:
    build:
      context: varnish/
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
    ports:
      - 80
    links:
      - web

  web:
    build:
      context: nginx/
    ports:
      - 80
    links:
      - magento
      - mysql
    volumes_from:
      - magento
    env_file:
      - ./global.env
    #environment:
      #- VIRTUAL_HOST=magento2.docker
      #- VIRTUAL_PORT=80
      #- HTTPS_METHOD=noredirect

  magento:
    hostname: fpm.magento2.docker
    build:
      context: php-fpm/
    ports:
      - 9000
    links:
      - mysql
    volumes:
      - ./magento:/var/www/magento
    env_file:
      - ./global.env

  mysql:
    image: mariadb:10
    ports:
      - 3306
    volumes:
      - ./volume/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2

  magento_cli:
    hostname: cli.magento2.docker
    build:
      context: php-cli/
    links:
      - mysql
    volumes:
      - ./volume/.composer/cache:/root/.composer/cache
    volumes_from:
      - magento
    env_file:
      - ./global.env
      - ./composer.env
    environment:
      - M2SETUP_INSTALL_DB=true
      - M2SETUP_BASE_URL=http://magento2.docker/
      # - M2SETUP_SECURE_BASE_URL=https://magento2.docker/
      - M2SETUP_BACKEND_FRONTNAME=admin
      - M2SETUP_VERSION=2.2.*
      # - M2SETUP_USE_SAMPLE_DATA=true

  magento_cron:
    build:
      context: php-cli/
    hostname: magento2-cron.docker
    command: run-cron
    environment:
      - ENABLE_SENDMAIL=true
    volumes_from:
      - magento
    links:
      - mysql
